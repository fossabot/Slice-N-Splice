language: cpp
sudo: false
dist: xenial

matrix:
  include:
    - os: linux
      compiler: gcc-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - python3
            - python3-pip
            - python3-setuptools

      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && GCOV=gcov-8"

    - os: linux
      compiler: gcc-9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - python3
            - python3-pip
            - python3-setuptools

      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9 && GCOV=gcov-9"

    - os: linux
      compiler: clang-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - g++-8
            - clang-8
            - python3
            - python3-pip
            - python3-setuptools

      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8 && GCOV='llvm-cov gcov'"

    - os: linux
      compiler: clang-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-7
          packages:
            - g++-7
            - clang-7
            - python3
            - python3-pip
            - python3-setuptools

      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7 && GCOV='llvm-cov gcov'"

before_install:
  - mkdir -p ~/.local/bin
  - eval "${MATRIX_EVAL}"
  - eval "PATH=$PATH:~/.local/bin"
  - curl -LO https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip
  - unzip ninja-linux.zip -d ~/.local/bin

install:
  - pip3 install --user wheel
  - pip3 install --user meson
  - pip3 install --user codecov

script:
  - meson -Db_coverage=true -Db_sanitize=address build
  - ninja -C build
  - ninja -C build test

after_success:
  - cd build
  - codecov --gcov-exec "$GCOV"
